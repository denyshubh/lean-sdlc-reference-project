<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>2.2.2.RELEASE</version>
		<relativePath /> <!-- lookup parent from repository -->
	</parent>
	<groupId>com.example.vikash</groupId>
	<artifactId>leansdlc-reference-project-rnd</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<name>leansdlc-spring-boot-reference-rnd</name>
	<description>Demo project for sample lean sdlc pipeline</description>

	<properties>
		<maven.compiler.source>1.11</maven.compiler.source>
		<maven.compiler.target>1.11</maven.compiler.target>
		<java.version>11</java.version>
		<problem-spring-web.version>0.25.0</problem-spring-web.version>
		<jacoco.version>0.8.3</jacoco.version>
		<jacoco.skip>false</jacoco.skip>
		<sonar.java.coveragePlugin>jacoco</sonar.java.coveragePlugin>
		<sonar.dynamicAnalysis>reuseReports</sonar.dynamicAnalysis>
		<sonar.jacoco.reportPath>${project.basedir}/target/jacoco.exec
		</sonar.jacoco.reportPath>
		<sonar.language>java</sonar.language>
		<sonar.exclusions>
			**/SpringBootTestingApplication.java
		</sonar.exclusions>
		<pmd-maven-version>3.13.0</pmd-maven-version>
		<error_prone_core-version>2.4.0</error_prone_core-version>
		<pit-maven-version>1.4.1</pit-maven-version>
		<pitest-junit5-version>0.12</pitest-junit5-version>
		<maven-surefire-version>2.22.0</maven-surefire-version>
		<pitPhase>verify</pitPhase>
	</properties>

	<dependencies>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-actuator</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-data-jpa</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-devtools</artifactId>
			<scope>runtime</scope>
			<optional>true</optional>
		</dependency>
		<dependency>
			<groupId>com.h2database</groupId>
			<artifactId>h2</artifactId>
			<scope>runtime</scope>
		</dependency>
		<dependency>
			<groupId>org.postgresql</groupId>
			<artifactId>postgresql</artifactId>
			<scope>runtime</scope>
		</dependency>
		<dependency>
			<groupId>org.projectlombok</groupId>
			<artifactId>lombok</artifactId>
			<optional>true</optional>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
			<exclusions>
				<exclusion>
					<groupId>junit</groupId>
					<artifactId>junit</artifactId>
				</exclusion>
			</exclusions>
		</dependency>

		<dependency>
			<groupId>org.junit.jupiter</groupId>
			<artifactId>junit-jupiter-params</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.junit.platform</groupId>
			<artifactId>junit-platform-launcher</artifactId>
			<version>1.3.2</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.junit.vintage</groupId>
			<artifactId>junit-vintage-engine</artifactId>
			<version>5.3.2</version>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>org.mockito</groupId>
			<artifactId>mockito-junit-jupiter</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.zalando</groupId>
			<artifactId>problem-spring-web-starter</artifactId>
			<version>${problem-spring-web.version}</version>
			<type>pom</type>
		</dependency>
		<dependency>
			<groupId>org.testcontainers</groupId>
			<artifactId>postgresql</artifactId>
			<version>1.11.3</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.testcontainers</groupId>
			<artifactId>junit-jupiter</artifactId>
			<version>1.11.3</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>info.cukes</groupId>
			<artifactId>cucumber-junit</artifactId>
			<version>1.2.5</version>
		</dependency>

		<dependency>
			<groupId>info.cukes</groupId>
			<artifactId>cucumber-spring</artifactId>
			<version>1.2.5</version>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>info.cukes</groupId>
			<artifactId>cucumber-java</artifactId>
			<version>1.2.5</version>
			<scope>test</scope>
		</dependency>

	</dependencies>

	<build>
		<plugins>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
			</plugin>
			<plugin>
				<groupId>org.jacoco</groupId>
				<artifactId>jacoco-maven-plugin</artifactId>
				<version>${jacoco.version}</version>

				<executions>
					<execution>
						<id>jacoco-initialize</id>
						<goals>
							<goal>prepare-agent</goal>
						</goals>
						<phase>test-compile</phase>
					</execution>
					<execution>
						<id>jacoco-site</id>
						<phase>verify</phase>
						<goals>
							<goal>report</goal>
						</goals>
					</execution>
					<execution>
						<id>default-check</id>
						<goals>
							<goal>check</goal>
						</goals>
						<configuration>
							<destFile>${sonar.jacoco.reportPath}</destFile>
							<append>true</append>
							<rules>
								<rule>
									<element>CLASS</element>
									<excludes>
										<exclude>*Test</exclude>
										<exclude>*IT</exclude>
										<exclude>*SpringBootTestingApplication</exclude>

									</excludes>
									<limits>
										<limit>
											<counter>LINE</counter>
											<value>COVEREDRATIO</value>
											<minimum>100%</minimum>
										</limit>
										<limit>
											<counter>BRANCH</counter>
											<value>COVEREDRATIO</value>
											<minimum>100%</minimum>
										</limit>
									</limits>
								</rule>

							</rules>
						</configuration>
					</execution>
				</executions>

			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>${maven-compiler-plugin.version}</version>
				<executions>
					<execution>
						<id>compile</id>
						<phase>compile</phase>
						<goals>
							<goal>compile</goal>
						</goals>
					</execution>
					<execution>
						<id>testCompile</id>
						<phase>test-compile</phase>
						<goals>
							<goal>testCompile</goal>
						</goals>
					</execution>
				</executions>
				<configuration>

					<source>11</source>
					<target>11</target>
					<fork>true</fork>
					<executable>${JAVA_HOME}/bin/javac</executable>
					<compilerArgument>-Xlint:all</compilerArgument>
					<compilerArgs>
						<arg>-Xplugin:ErrorProne</arg>
						<arg>-Xlint:all,-options,-path</arg>
						<arg>-XDcompilePolicy=simple</arg>
					</compilerArgs>
					<annotationProcessorPaths>
						<path>
							<groupId>com.google.errorprone</groupId>
							<artifactId>error_prone_core</artifactId>
							<version>${error_prone_core-version}</version>
						</path>
					</annotationProcessorPaths>
				</configuration>
				<dependencies>
					<dependency>
						<groupId>com.google.errorprone</groupId>
						<artifactId>error_prone_core</artifactId>
						<version>${error_prone_core-version}</version>
					</dependency>
				</dependencies>
			</plugin>



			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-pmd-plugin</artifactId>
				<version>${pmd-maven-version}</version>
				<configuration>

					<!-- its true by default, turn it on, if you want to fail the build 
						on violation -->
					<failOnViolation>false</failOnViolation>

					<printFailingErrors>true</printFailingErrors>
					<targetJdk>11</targetJdk>
					<linkXRef>false</linkXRef>
					<!-- enable incremental analysis -->
					<analysisCache>true</analysisCache>
					<!-- analysisCacheLocation: optional - points to the following location 
						by default -->
					<analysisCacheLocation>${project.build.directory}/pmd/pmd.cache</analysisCacheLocation>

				</configuration>
				<executions>
					<execution>
						<phase>validate</phase>
						<goals>
							<goal>check</goal>
							<goal>cpd-check</goal>
						</goals>
					</execution>
				</executions>

			</plugin>
			<!-- it fails the build when bug is found, if you want to rely on SonarQube, 
				please comment this plugin -->
			<plugin>
				<groupId>com.github.spotbugs</groupId>
				<artifactId>spotbugs-maven-plugin</artifactId>
				<version>4.0.4</version>
				<dependencies>
					<!-- overwrite dependency on spotbugs if you want to specify the version 
						of spotbugs -->
					<dependency>
						<groupId>com.github.spotbugs</groupId>
						<artifactId>spotbugs</artifactId>
						<version>4.1.2</version>
					</dependency>
				</dependencies>
				<configuration>
					<effort>Max</effort>
					<threshold>Low</threshold>
					<xmlOutput>true</xmlOutput>
				</configuration>
				<executions>
					<execution>

						<goals>
							<goal>check</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
		</plugins>
	</build>
	<profiles>
		<profile>
			<id>mutationTest</id>
			<build>
				<plugins>
					<plugin>
						<groupId>org.pitest</groupId>
						<artifactId>pitest-maven</artifactId>
						<version>${pit-maven-version}</version>
						<dependencies>
							<dependency>
								<groupId>org.pitest</groupId>
								<artifactId>pitest-junit5-plugin</artifactId>
								<version>${pitest-junit5-version}</version>
							</dependency>
						</dependencies>
						<executions>
							<execution>
								<id>pit-test</id>

								<phase>${pitPhase}</phase>
								<goals>
									<goal>mutationCoverage</goal>
								</goals>
							</execution>

						</executions>
						<configuration>
							<failWhenNoMutations>false</failWhenNoMutations>
							<exportLineCoverage>true</exportLineCoverage>
							<timestampedReports>false</timestampedReports>
							<mutators>
								<mutator>DEFAULTS</mutator>
							</mutators>
							<outputFormats>
								<value>XML</value>
								<value>HTML</value>
							</outputFormats>
						</configuration>
					</plugin>
				</plugins>
			</build>
		</profile>
		<profile>
			<id>integrationTest</id>
			<build>
				<plugins>
					<plugin>
						<artifactId>maven-surefire-plugin</artifactId>
						<version>${maven-surefire-version}</version>
						<executions>
							<execution>
								<phase>integration-test</phase>
								<goals>
									<goal>test</goal>
								</goals>
								<configuration>
									<excludes>
										<exclude>none</exclude>
									</excludes>
									<includes>
										<include>**/*IT</include>
									</includes>
								</configuration>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>

	</profiles>
	
</project>
